<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Crestpoint Capital — Dashboard</title>

  
  <script src="https://cdn.tailwindcss.com"></script>

  
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            crestNavy: '#0b1834',
            crestMid: '#071a38',
            crestDeep: '#04122a',
            accentA: '#00BFFF',
            accentB: '#0077FF'
          },
          fontFamily: {
            manrope: ['Manrope', 'sans-serif'],
            poppins: ['Poppins', 'sans-serif']
          }
        }
      }
    }
  </script>

 
  <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@300;600;800&family=Poppins:wght@300;500;700&display=swap" rel="stylesheet">

  <style>
    html,body { height: 100%; }
   
    .scrollbar-thin::-webkit-scrollbar { height: 8px; width: 8px; }
    .scrollbar-thumb-custom::-webkit-scrollbar-thumb { background: rgba(255,255,255,0.08); border-radius: 8px; }
    .glass { background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01)); backdrop-filter: blur(6px); }
  </style>
</head>
<body class="font-manrope antialiased bg-gradient-to-b from-crestNavy via-crestMid to-crestDeep text-slate-100">

 
  <header class="w-full">
    <div class="w-full px-6 py-4 flex items-center justify-between border-b border-white/6">
      <div class="flex items-center gap-4">
       
        <a href="/" class="flex items-center gap-3">
          <img src="/logo.jpg" alt="Crestpoint" class="h-10 w-10 rounded-full object-cover ring-1 ring-white/5" />
          <div>
            <div class="text-white font-semibold tracking-wide">Crestpoint Capital</div>
            <div class="text-xs text-slate-300">Institutional-grade Investing</div>
          </div>
        </a>
      </div>

      <div class="flex items-center gap-4">
       
        <nav class="hidden sm:flex items-center gap-3 text-sm">
          <a href="#account" class="px-3 py-1 rounded-md hover:bg-white/5 transition">Account</a>
          <a href="#plans" class="px-3 py-1 rounded-md hover:bg-white/5 transition">Plans</a>
          <a href="#crypto" class="px-3 py-1 rounded-md hover:bg-white/5 transition">Markets</a>
        </nav>

        
        <div class="flex items-center gap-3">
          <div class="text-sm text-slate-300 mr-2">Hello, <span class="text-white font-semibold"><%= name %></span></div>

          
          <div class="relative">
            <button id="langBtn" class="px-3 py-1 rounded-md bg-white/3 text-sm text-slate-100 hover:bg-white/5 transition">EN</button>
            <div id="langMenu" class="hidden absolute right-0 mt-2 w-36 bg-slate-800 rounded shadow-lg border border-white/6 overflow-hidden">
              <a class="block px-4 py-2 hover:bg-white/5" href="?lang=en">English</a>
              <a class="block px-4 py-2 hover:bg-white/5" href="?lang=es">Español</a>
            </div>
          </div>

          
          <button aria-label="Notifications" class="relative p-2 rounded-md hover:bg-white/5 transition">
            <svg class="h-5 w-5 text-slate-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6 6 0 10-12 0v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
            </svg>
            <span class="absolute top-0 right-0 inline-block w-2 h-2 bg-rose-400 rounded-full ring-2 ring-crestDeep"></span>
          </button>

         
          <div class="relative">
            <button id="profileBtn" class="flex items-center gap-2 px-3 py-1 rounded-md bg-white/3 hover:bg-white/5 transition">
              <img src="/logo.jpg" alt="me" class="h-7 w-7 rounded-full object-cover" />
              <svg class="h-4 w-4 text-slate-200" viewBox="0 0 20 20" fill="currentColor"><path d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.24a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.06z"/></svg>
            </button>

            <div id="profileMenu" class="hidden absolute right-0 mt-2 w-44 bg-slate-800 rounded shadow-lg border border-white/6 overflow-hidden">
              <a href="/profile" class="block px-4 py-2 hover:bg-white/5">Profile</a>
              <a href="/change-password" class="block px-4 py-2 hover:bg-white/5">Change Password</a>
              <a href="/logout" class="block px-4 py-2 hover:bg-white/5">Logout</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </header>

 
  <section class="w-full px-6 pt-8 pb-10">
    <div class="max-w-screen-2xl mx-auto">
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
       
        <div class="glass p-5 rounded-xl shadow-lg border border-white/6 flex items-center justify-between">
          <div>
            <div class="text-xs text-slate-300">Total Withdraw</div>
            <div class="text-2xl font-bold mt-1">$<%= deposit.toFixed(2) %></div>
          </div>
          <div class="px-3 py-2 rounded-md bg-gradient-to-br from-accentA to-accentB/90">
            <svg class="h-6 w-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6" d="M12 8c-3.866 0-7 1.79-7 4s3.134 4 7 4 7-1.79 7-4-3.134-4-7-4z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6" d="M12 4v4"/></svg>
          </div>
        </div>

       
        <div class="glass p-5 rounded-xl shadow-lg border border-white/6 flex items-center justify-between">
          <div>
            <div class="text-xs text-slate-300">Profit</div>
            <div class="text-2xl font-bold mt-1">$<%= profit.toFixed(2) %></div>
          </div>
          <div class="px-3 py-2 rounded-md bg-gradient-to-br from-emerald-500 to-emerald-700/90">
            <svg class="h-6 w-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6" d="M3 12h18M3 6h18M3 18h18"/></svg>
          </div>
        </div>

       
        <div class="glass p-5 rounded-xl shadow-lg border border-white/6 flex items-center justify-between">
          <div>
            <div class="text-xs text-slate-300">Total Deposit</div>
            <div class="text-2xl font-bold mt-1">$<%= withdrawal.toFixed(2) %></div>
          </div>
          <div class="px-3 py-2 rounded-md bg-gradient-to-br from-rose-500 to-rose-700/90">
            <svg class="h-6 w-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6" d="M12 3v18M3 12h18"/></svg>
          </div>
        </div>

        
        <div class="glass p-5 rounded-xl shadow-lg border border-white/6 flex items-center justify-between">
          <div>
            <div class="text-xs text-slate-300">Account Status</div>
            <div class="text-2xl font-bold mt-1">Active</div>
          </div>
          <div class="px-3 py-2 rounded-md bg-gradient-to-br from-accentA to-accentB/90">
            <svg class="h-6 w-6 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6" d="M5 12l4 4L19 7"/></svg>
          </div>
        </div>
      </div>
    </div>
  </section>

 
  <section class="w-full px-6 -mt-4">
    <div class="max-w-screen-2xl mx-auto">
      <div class="bg-slate-900/40 rounded-xl p-2 flex gap-2 items-center">
        <button class="px-4 py-2 rounded-lg bg-white/5 text-slate-100 font-medium">Dashboard</button>
        <button class="px-4 py-2 rounded-lg hover:bg-white/5">Account</button>
        <button class="px-4 py-2 rounded-lg hover:bg-white/5">Deposit</button>
        <button class="px-4 py-2 rounded-lg hover:bg-white/5">Withdraw</button>
        <button class="px-4 py-2 rounded-lg hover:bg-white/5 ml-auto">Settings</button>
      </div>
    </div>
  </section>

 
  <main class="w-full px-6 mt-6 mb-12">
    <div class="max-w-screen-2xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-6">
      
      <!-- Left: TradingView & Chart (spans 2 columns on lg) -->
      <section class="lg:col-span-2 space-y-6">
        <div class="bg-slate-900/50 rounded-2xl p-4 border border-white/6 shadow-xl">
          <!-- Live Chart (TradingView) -->
          <div class="w-full h-80 rounded-lg overflow-hidden">
            <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js" async>
            {
              "symbol": "BINANCE:BTCUSDT",
              "width": "100%",
              "colorTheme": "dark",
              "isTransparent": false,
              "locale": "en"
            }
            </script>
          </div>
        </div>

        <!-- TradingView Ticker + Overview -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="bg-slate-900/50 rounded-2xl p-4 border border-white/6 shadow-xl">
            <div class="tradingview-widget-container">
              <div class="tradingview-widget-container__widget"></div>
              <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js" async>
              {
                "symbols":[
                  {"proName":"BITSTAMP:BTCUSD","title":"Bitcoin"},
                  {"proName":"BITSTAMP:ETHUSD","title":"Ethereum"},
                  {"proName":"BINANCE:SOLUSDT","title":"Solana"},
                  {"proName":"BINANCE:BNBUSDT","title":"BNB"}
                ],
                "colorTheme":"dark",
                "isTransparent":true,
                "displayMode":"adaptive"
              }
              </script>
            </div>
          </div>

          <div class="bg-slate-900/50 rounded-2xl p-4 border border-white/6 shadow-xl">
            <div class="tradingview-widget-container">
              <div class="tradingview-widget-container__widget"></div>
              <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js" async>
              {
                "colorTheme":"dark",
                "tabs":[{"title":"Crypto","symbols":[{"s":"BINANCE:BTCUSDT"},{"s":"CRYPTOCAP:SOL"},{"s":"BITSTAMP:ETHUSD"},{"s":"CRYPTOCAP:BNB"}]}],
                "width":"100%","height":300,"showChart":true,"locale":"en"
              }
              </script>
            </div>
          </div>
        </div>
      </section>

      <!-- Right: Forms (Deposit + Withdraw) -->
      <aside class="space-y-6">
        <!-- Deposit -->
        <form id="deposit-form" action="/deposit" method="POST" class="bg-slate-900/50 p-4 rounded-2xl border border-white/6 shadow-xl space-y-4">
          <h3 class="text-lg font-semibold">Make a Deposit</h3>

          <select id="coin" name="coin" class="w-full p-2 rounded-md bg-slate-800 border border-slate-700" onchange="updateAddress()">
            <option value="btc">BTC</option>
            <option value="eth">ETH</option>
            <option value="bnb">BNB</option>
            <option value="sol">SOL</option>
          </select>

          <div>
            <label class="text-sm text-slate-300">Deposit Address</label>
            <input type="text" id="address" readonly class="w-full p-2 rounded-md bg-slate-800 border border-slate-700 text-slate-200" />
          </div>

          <div>
            <label class="text-sm text-slate-300">Amount (USD)</label>
            <input type="number" step="0.01" name="amount" required class="w-full p-2 rounded-md bg-slate-800 border border-slate-700 text-slate-200" />
          </div>

          <select name="pkg" class="w-full p-2 rounded-md bg-slate-800 border border-slate-700">
            <option>STARTER</option>
            <option>VIP</option>
            <option>DELUXE</option>
          </select>

          <button type="submit" class="w-full bg-gradient-to-br from-accentA to-accentB py-2 rounded-lg font-semibold text-crestDeep">Deposit</button>
        </form>

        <!-- Withdraw -->
        <form id="withdraw-form" action="/withdraw" method="POST" class="bg-slate-900/50 p-4 rounded-2xl border border-white/6 shadow-xl space-y-4">
          <h3 class="text-lg font-semibold">Make a Withdrawal</h3>

          <select name="coin_type" required class="w-full p-2 rounded-md bg-slate-800 border border-slate-700">
            <option value="BTC">Bitcoin (BTC)</option>
            <option value="ETH">Ethereum (ETH)</option>
            <option value="SOL">Solana (SOL)</option>
            <option value="BNB">Binance Coin (BNB)</option>
          </select>

          <input type="text" name="address" required placeholder="Wallet Address" class="w-full p-2 rounded-md bg-slate-800 border border-slate-700 text-slate-200"/>
          <input type="number" step="0.01" name="amount" required placeholder="Amount (USD)" class="w-full p-2 rounded-md bg-slate-800 border border-slate-700 text-slate-200"/>

        <button
  class="bg-gradient-to-r from-[#00BFFF] to-[#0077FF] text-white px-5 py-2 rounded-xl font-semibold shadow-md hover:shadow-lg transition-all"
  onclick="showWithdrawAlert()"
>
  Withdraw
</button>

<script>
  function showWithdrawAlert() {
    alert('⚠️ Perform 2 more transactions before you can withdraw.');
  }
</script>


          <p id="withdraw-message" class="text-yellow-400 mt-2 hidden">Perform 2 more transactions before withdrawing.</p>
        </form>
      </aside>
    </div>

    <!-- TRANSACTION HISTORY - Full width container, with wide Date column -->
    <section class="mt-8">
      <div class="bg-slate-900/50 rounded-2xl p-6 border border-white/6 shadow-xl">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold">Transaction History</h3>
          <div class="text-sm text-slate-400">Showing recent activity — updated in real time</div>
        </div>

        <div class="overflow-x-auto scrollbar-thin scrollbar-thumb-custom rounded-md">
          <table class="min-w-full table-auto text-sm">
            <thead class="bg-gradient-to-r from-accentB to-accentA text-white">
              <tr>
                <th class="p-3 border border-slate-800 text-center w-[14%]">Coin</th>
                <th class="p-3 border border-slate-800 text-center w-[14%]">Amount</th>
                <th class="p-3 border border-slate-800 text-center w-[14%]">From</th>
                <th class="p-3 border border-slate-800 text-center w-[14%]">Status</th>
                <th class="p-3 border border-slate-800 text-center w-[44%]">Date & Details</th>
              </tr>
            </thead>

            <tbody class="bg-slate-900/80 divide-y divide-slate-800 text-slate-200">
              <% if (!transactions || transactions.length === 0) { %>
                <tr>
                  <td colspan="5" class="p-6 text-center text-slate-400 italic">No transactions found.</td>
                </tr>
              <% } else { %>
                <% transactions.forEach(tx => { %>
                  <tr class="hover:bg-slate-800/60 transition">
                    <td class="p-3 text-center font-medium"><%= (tx.coin_type || '—').toUpperCase() %></td>
                    <td class="p-3 text-right">$<%= parseFloat(tx.amount || 0).toFixed(2) %></td>
                    <td class="p-3 text-center capitalize"><%= (tx.type || '—') %></td>
                    <td class="p-3 text-center">
                      <% if (tx.status === 'pending') { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-md bg-yellow-600/20 text-yellow-300 text-xs font-semibold">Pending</span>
                      <% } else if (tx.status === 'completed') { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-md bg-emerald-600/20 text-emerald-300 text-xs font-semibold">Completed</span>
                      <% } else { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-md bg-rose-600/20 text-rose-300 text-xs font-semibold"><%= tx.status %></span>
                      <% } %>
                    </td>
                    <td class="p-3 text-slate-300 text-sm">
                      <div class="flex items-center justify-between">
                        <div>
                          <div><strong><%= new Date(tx.created_at).toLocaleString() %></strong></div>
                          <div class="text-slate-400 text-xs mt-1">From: <span class="text-slate-200"><%= tx.sender_name || '—' %></span> → To: <span class="text-slate-200"><%= tx.recipient_name || '—' %></span></div>
                        </div>
                        <div class="text-xs text-slate-400 ml-4">ID: <span class="text-slate-300"><%= tx.id %></span></div>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="mt-12 text-center text-slate-400">
      © 2025 Crestpoint Capital. All rights reserved.
    </footer>
  </main>

  <!-- Scripts -->
  <script>
    // simple toggles
    const profileBtn = document.getElementById('profileBtn');
    const profileMenu = document.getElementById('profileMenu');
    const langBtn = document.getElementById('langBtn');
    const langMenu = document.getElementById('langMenu');

    profileBtn?.addEventListener('click', (e) => {
      e.stopPropagation();
      profileMenu.classList.toggle('hidden');
    });

    langBtn?.addEventListener('click', (e) => {
      e.stopPropagation();
      langMenu.classList.toggle('hidden');
    });

    window.addEventListener('click', () => {
      profileMenu?.classList.add('hidden');
      langMenu?.classList.add('hidden');
    });

    // coin deposit address mapping
    const addresses = {
      btc: "bc1q87yng5l9kyl7390gm80nreq2qmw3v7f0ryx699",
      eth: "0x497785495154a4D919Cd0aA047Fc23a778bd6337",
      bnb: "9D8d3DL9sYSHU9VVnateJEeosKg31MZNPNMJxMWkAs13",
      sol: "0x497785495154a4D919Cd0aA047Fc23a778bd6337"
    };

    function updateAddress() {
      const coinSelect = document.getElementById('coin');
      const addr = addresses[coinSelect?.value] || '';
      document.getElementById('address').value = addr;
    }
    window.addEventListener('load', updateAddress);

    // withdraw rule: require >= 2 performed transactions
    document.getElementById('withdraw-form')?.addEventListener('submit', function(e){
      // This should be replaced by server-side check. Client side only prevents obvious misuse.
      const performedTransactions = <%= (typeof performedTransactions !== 'undefined' ? performedTransactions : 0) %>;
      if(performedTransactions < 2) {
        e.preventDefault();
        document.getElementById('withdraw-message').classList.remove('hidden');
      }
    });
  </script>
</body>
</html>
